<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Game</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            text-align: center;
            padding: 20px;
        }

        h1 {
            color: #333;
        }

        #question {
            margin-top: 20px;
            font-size: 1.2em;
            font-weight: bold;
        }

        #answers {
            margin-top: 10px;
        }

        #answers div {
            margin-bottom: 10px;
        }

        #answers button {
            display: block;
            margin: 5px auto;
            padding: 10px 20px;
            font-size: 1em;
            background-color: #4caf50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        #answers button:hover {
            background-color: #45a049;
        }

        #timer {
            margin-top: 20px;
            font-size: 1.2em;
        }

        #startGame,
        #restartGame,
        #home {
            margin-top: 20px;
            padding: 10px 20px;
            font-size: 1em;
            background-color: #008CBA;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        #startGame:hover,
        #restartGame:hover,
        #home:hover {
            background-color: #005f73;
        }

        #restartGame {
            margin-top: 20px;
        }

        #restartGame:hover {
            background-color: #005f73;
        }

        /* Test styling */
        .test {
            color: #666;
            font-style: italic;
        }
    </style>
</head>

<body>
    <h1>Welcome, <span id="userName"></span>!</h1>
    <div id="question"></div>
    <div id="answers"></div>
    <div id="timer"></div>
    <button id="startGame">Start Game</button>
    <button id="restartGame">Restart Game</button>
    <button id="home">Home</button>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const startButton = document.getElementById('startGame');
            const questionDiv = document.getElementById('question');
            const answersDiv = document.getElementById('answers');
            const timerDiv = document.getElementById('timer');
            const home = document.getElementById('home');
            const restartButton = document.getElementById('restartGame');

            let correctyansweredQuestions = 0;
            const userResponses = [];

            let timer;
            let questionCount = 0;
            const askedQuestions = [];

            home.addEventListener('click', () => {
                window.location.reload();
            });

            startButton.addEventListener('click', startGame);
            restartButton.addEventListener('click', startGame);

            restartButton.style.display = 'none';
            home.style.display = 'none';

            function startGame() {
                startButton.style.display = 'none';
                restartButton.style.display = 'inline';
                home.style.display = 'inline';

                correctyansweredQuestions = 0;
                questionCount = 0;
                userResponses.length = 0;
                clearInterval(timer);
                nextQuestion();
            }

            function nextQuestion() {
                if (questionCount >= 10) {
                    displayGameResult();
                    return;
                }

                fetch('http://localhost:3000/game/start-game')
                    .then(response => response.json())
                    .then(data => {
                        const uniqueQuestion = getUniqueQuestion(data);
                        renderQuestion(uniqueQuestion);
                        startTimer();

                        userResponses.push({
                            question: uniqueQuestion.question,
                            selectedAnswer: null,
                            isCorrect: null
                        });
                    })
                    .catch(error => console.error('Error starting game:', error));
            }

            function getUniqueQuestion(data) {
                const uniqueQuestions = data.filter(question => !askedQuestions.includes(question.question));
                if (uniqueQuestions.length === 0) {
                    askedQuestions.length = 0;
                }
                const randomIndex = Math.floor(Math.random() * uniqueQuestions.length);
                const selectedQuestion = uniqueQuestions[randomIndex];
                askedQuestions.push(selectedQuestion.question);
                questionCount++;
                return selectedQuestion;
            }

            function renderQuestion(questionData) {
                questionDiv.textContent = questionData.question;
                answersDiv.innerHTML = '';

                questionData.answers.forEach(answer => {
                    const button = document.createElement('button');
                    button.textContent = answer;
                    button.addEventListener('click', () => checkAnswer(answer, questionData.correctAnswer, questionData.question));
                    answersDiv.appendChild(button);
                });
            }

            function startTimer() {
                let timeLeft = 30;
                timerDiv.textContent = `Time left: ${timeLeft} seconds`;

                timer = setInterval(() => {
                    timeLeft--;
                    if (timeLeft >= 0) {
                        timerDiv.textContent = `Time left: ${timeLeft} seconds`;
                    } else {
                        clearInterval(timer);
                        timerDiv.textContent = 'Time\'s up!';
                        checkAnswer('', '', ''); // Call checkAnswer with empty parameters when time runs out
                    }
                }, 1000);
            }

            function checkAnswer(selectedAnswer, correctAnswer, question) {
                clearInterval(timer);
                let resultMessage;
                if (selectedAnswer === correctAnswer && selectedAnswer !== '') { // Check if selectedAnswer is not empty
                    resultMessage = 'Correct!';
                    correctyansweredQuestions++;
                } else if (selectedAnswer === '') { // Handle case when no answer is selected (time runs out)
                    resultMessage = 'Time\'s up!'; // Display appropriate message
                } else {
                    resultMessage = 'Incorrect!';
                }

                const resultDiv = document.createElement('div');
                resultDiv.textContent = resultMessage;
                answersDiv.appendChild(resultDiv);

                const currentUserResponse = userResponses[userResponses.length - 1];
                currentUserResponse.selectedAnswer = selectedAnswer;
                currentUserResponse.isCorrect = selectedAnswer === correctAnswer;

                setTimeout(() => {
                    resultDiv.remove();
                    nextQuestion();
                }, 2000);
            }

            function displayGameResult() {
                questionDiv.textContent = '';
                answersDiv.innerHTML = '';
                timerDiv.textContent = '';

                userResponses.forEach((response, index) => {
                    const questionNumber = index + 1;
                    const resultMessage = `Question ${questionNumber}: ${response.selectedAnswer} (${response.isCorrect ? 'Correct' : 'Incorrect'})`;
                    const resultDiv = document.createElement('div');
                    resultDiv.textContent = resultMessage;
                    answersDiv.appendChild(resultDiv);

                    const questionElement = document.createElement('div');
                    questionElement.textContent = `Original Question: ${response.question}`;
                    answersDiv.appendChild(questionElement);
                    answersDiv.appendChild(document.createElement('br'));
                });

                const resultMessage = `Game Over! You answered ${correctyansweredQuestions} questions correctly out of 10.`;
                questionDiv.textContent = resultMessage;

                restartButton.style.display = 'inline-block';
            }
        });
    </script>
</body>

</html>